
CC = gcc
CFLAGS = -std=c99 -Wall
PARSER = parser.tab.c lex.yy.c
OBJECTS = stack.o dict.o object.o evaluator.o scope.o ast.o error.o
EXEC = ward

LIB = libward_socket.so
LIB_REQS = object.o error.o stack.o dict.o scope.o

all: $(PARSER) $(OBJECTS) $(EXEC) $(LIB)
	@printf '=================\n'
	@printf 'Ready to install.\n'
	@printf '=================\n'

$(EXEC): $(OBJECTS) $(PARSER)
	$(CC) $(PARSER) $(OBJECTS) -o $(EXEC) -lfl

$(LIB): $(OBJECTS) wardsocket.c
	@printf '======================\n'
	@printf 'Compiling Libraries...\n'
	@printf '======================\n'
	$(CC) -fPIC -c wardsocket.c
	$(CC) -shared -o $(LIB) wardsocket.o $(LIB_REQS)

install: $(EXEC) $(LIB)
	cp $(EXEC) $(PREFIX)/bin/$(EXEC)
	cp $(LIB) $(LD_LIBRARY_PATH)
	mkdir -p $(LD_LIBRARY_PATH)/ward
	cp lib/*.ward $(LD_LIBRARY_PATH)/ward/
	@printf '====================\n'
	@printf 'Instalation success.\n'
	@printf '====================\n'

uninstall:
	rm -f $(DESTDIR)$(PREFIX)/bin/$(EXEC)

evaluator: evaluator.c evaluator.h
	$(CC) -c evaluator.c

scope: scope.c scope.h
	$(CC) -c scope.c

ast: ast.c ast.h
	$(CC) -c ast.c

object: object.c object.h
	$(CC) -c object.c

stack: stack.c stack.h
	$(CC) -c stack.c

dict: dict.c dict.h
	$(CC) -c dict.c

error: error.c error.h
	$(CC) -c error.c

$(PARSER): lexer.l parser.y
	flex lexer.l
	bison -d parser.y

clean:
	rm -f parser.tab.* lex.yy.c *.o ward.a *.so

